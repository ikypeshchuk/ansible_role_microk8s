- name: Make sure snapd is installed
  package:
    name:
      - snapd
    state: latest
  become: true
  when: ansible_distribution != 'Archlinux'

- name: Make sure snapd is installed
  pacman:
    name:
      - snapd
    state: present
  become: true
  when: ansible_distribution == 'Archlinux'

- name: Check if is raspberry
  shell: "uname -r"
  register: uname

- name: Install raspberry specific packages
  package:
    name:
      - linux-modules-extra-raspi
    state: latest
  when: uname.stdout | regex_search('raspi')

- name: Install microk8s
  become: true
  snap:
    name: microk8s
    classic: true
    channel: "{{ microk8s_version }}"

- name: Wait for microk8s to be ready
  become: true
  command: microk8s.status --wait-ready
  changed_when: false
  register: mk8sstatusout
  failed_when:
      - "'This MicroK8s deployment is acting as a node in a cluster.' not in mk8sstatusout.stdout_lines"
      - mk8sstatusout.rc > 0


- name: Create kubectl alias
  become: true
  command: "snap alias microk8s.kubectl kubectl"
  changed_when: false
  register: aliaskubectlout

- name: Create helm3 alias
  become: true
  command: "snap alias microk8s.helm3 helm"
  changed_when: false
  register: aliashelmout
  when:
    - "'helm3' in microk8s_plugins"
    - microk8s_plugins.helm3

- name: Create custom certificates
  become: true
  ansible.builtin.template:
    src: "{{ microk8s_csr_template }}"
    dest: /var/snap/microk8s/current/certs/csr.conf.template
    mode: 0644
  when: microk8s_csr_template is defined and microk8s_csr_template is file
  notify:
  - Refresh certs

- name: Create folder for microk8s certificates
  become: true
  file:
    path: /usr/share/ca-certificates/extra
    state: directory
    mode: 0755
  tags: 
    - setup

- name: Find certificate files
  become: true
  find:
    paths: "/var/snap/microk8s/current/certs"
    patterns: "*ca*.crt"
  register: cert_files
  tags: 
    - setup

- name: Copy certificates
  become: true
  copy:
    src: "{{ item.path }}"
    dest: /usr/share/ca-certificates/extra
    remote_src: true
    force: true
    mode: 0644
  loop: "{{ cert_files.files }}"
  loop_control:
    label: "{{ item.path }}"
  tags: 
    - setup

- name: Trust certificates generated by microk8s
  become: true
  command: "update-ca-certificates"
  register: command_result
  changed_when: "'0 added, 0 removed' not in command_result.stdout"

- name: Disable snap autoupdate
  become: true
  blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED: microk8s Disable snap autoupdate"
    content: |
      127.0.0.1 api.snapcraft.io
  when: microk8s_disable_snap_autoupdate
